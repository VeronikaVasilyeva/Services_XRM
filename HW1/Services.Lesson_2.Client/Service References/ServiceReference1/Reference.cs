//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services.Lesson_2.Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/Services.Lesson_2.Service")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.Lesson_2.Client.ServiceReference1.BookType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.Lesson_2.Client.ServiceReference1.BookType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookType", Namespace="http://schemas.datacontract.org/2004/07/Services.Lesson_2.Service")]
    public enum BookType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Journal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Textbook = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fiction = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILibrary")]
    public interface ILibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/AddBook", ReplyAction="http://tempuri.org/ILibrary/AddBookResponse")]
        void AddBook(Services.Lesson_2.Client.ServiceReference1.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/AddBook", ReplyAction="http://tempuri.org/ILibrary/AddBookResponse")]
        System.Threading.Tasks.Task AddBookAsync(Services.Lesson_2.Client.ServiceReference1.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/GetBookById", ReplyAction="http://tempuri.org/ILibrary/GetBookByIdResponse")]
        Services.Lesson_2.Client.ServiceReference1.Book GetBookById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/GetBookById", ReplyAction="http://tempuri.org/ILibrary/GetBookByIdResponse")]
        System.Threading.Tasks.Task<Services.Lesson_2.Client.ServiceReference1.Book> GetBookByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/GetBooksByAuthor", ReplyAction="http://tempuri.org/ILibrary/GetBooksByAuthorResponse")]
        Services.Lesson_2.Client.ServiceReference1.Book[] GetBooksByAuthor(string author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/GetBooksByAuthor", ReplyAction="http://tempuri.org/ILibrary/GetBooksByAuthorResponse")]
        System.Threading.Tasks.Task<Services.Lesson_2.Client.ServiceReference1.Book[]> GetBooksByAuthorAsync(string author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/GiveBook", ReplyAction="http://tempuri.org/ILibrary/GiveBookResponse")]
        Services.Lesson_2.Client.ServiceReference1.Book GiveBook(int idBook, int idPerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/GiveBook", ReplyAction="http://tempuri.org/ILibrary/GiveBookResponse")]
        System.Threading.Tasks.Task<Services.Lesson_2.Client.ServiceReference1.Book> GiveBookAsync(int idBook, int idPerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/ReturnBook", ReplyAction="http://tempuri.org/ILibrary/ReturnBookResponse")]
        void ReturnBook(int idBook, int idPerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/ReturnBook", ReplyAction="http://tempuri.org/ILibrary/ReturnBookResponse")]
        System.Threading.Tasks.Task ReturnBookAsync(int idBook, int idPerson);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryChannel : Services.Lesson_2.Client.ServiceReference1.ILibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryClient : System.ServiceModel.ClientBase<Services.Lesson_2.Client.ServiceReference1.ILibrary>, Services.Lesson_2.Client.ServiceReference1.ILibrary {
        
        public LibraryClient() {
        }
        
        public LibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddBook(Services.Lesson_2.Client.ServiceReference1.Book book) {
            base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task AddBookAsync(Services.Lesson_2.Client.ServiceReference1.Book book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public Services.Lesson_2.Client.ServiceReference1.Book GetBookById(int id) {
            return base.Channel.GetBookById(id);
        }
        
        public System.Threading.Tasks.Task<Services.Lesson_2.Client.ServiceReference1.Book> GetBookByIdAsync(int id) {
            return base.Channel.GetBookByIdAsync(id);
        }
        
        public Services.Lesson_2.Client.ServiceReference1.Book[] GetBooksByAuthor(string author) {
            return base.Channel.GetBooksByAuthor(author);
        }
        
        public System.Threading.Tasks.Task<Services.Lesson_2.Client.ServiceReference1.Book[]> GetBooksByAuthorAsync(string author) {
            return base.Channel.GetBooksByAuthorAsync(author);
        }
        
        public Services.Lesson_2.Client.ServiceReference1.Book GiveBook(int idBook, int idPerson) {
            return base.Channel.GiveBook(idBook, idPerson);
        }
        
        public System.Threading.Tasks.Task<Services.Lesson_2.Client.ServiceReference1.Book> GiveBookAsync(int idBook, int idPerson) {
            return base.Channel.GiveBookAsync(idBook, idPerson);
        }
        
        public void ReturnBook(int idBook, int idPerson) {
            base.Channel.ReturnBook(idBook, idPerson);
        }
        
        public System.Threading.Tasks.Task ReturnBookAsync(int idBook, int idPerson) {
            return base.Channel.ReturnBookAsync(idBook, idPerson);
        }
    }
}
